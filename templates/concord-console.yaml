---
kind: ConfigMap
apiVersion: v1
metadata:
  name: console-configuration
  namespace: {{ .Values.namespace }}
data:
  nginx.conf: |
{{ (.Files.Glob "files/console/nginx.conf").AsConfig | indent 2 }}

  app.conf: |
{{ (.Files.Glob "files/console/app.conf").AsConfig | indent 2 }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: concord-console
spec:
  replicas: 1
  selector:
    matchLabels:
      app: concord-console
  template:
    metadata:
      labels:
        app: concord-console
    spec:
      containers:
        - name: concord-console
          image: {{ .Values.console.image.repository }}:{{ .Values.console.image.tag }}
          imagePullPolicy: "IfNotPresent"
          volumeMounts:
          - name: "console-configuration-mnt"
            mountPath: /opt/concord/console/nginx
          ports:
          - containerPort: {{ .Values.console.port }}
      volumes:
      - name: console-configuration-mnt
        configMap:
          name: console-configuration
---
apiVersion: v1
kind: Service
metadata:
  name: concord-console
{{- if .Values.console.annotations }}
{{- with .Values.console.annotations }}
  annotations:
{{ toYaml . | indent 4 }}
{{- end }}
{{- end }}
  labels:
    app: concord-console
spec:
  type: {{ .Values.console.type | default "ClusterIP" }}
  ports:
  - port: {{ .Values.console.port }}
    protocol: TCP
  selector:
    app: concord-console
{{- if .Values.ingress.enabled }}
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: concord-ingress
{{- if .Values.ingress.annotations }}
{{- with .Values.ingress.annotations }}
  annotations:
{{ toYaml . | indent 4 }}
{{- end }}
{{- end }}
spec:
  tls:
    - secretName: {{ .Values.ingress.certificateSecret }}
      hosts:
      - {{ .Values.ingress.host }}
  rules:
  - host: {{ .Values.ingress.host }}
    http:
      paths:
      - path: /
        backend:
          serviceName: concord-console
          servicePort: {{ .Values.console.port }}
{{- end -}}
